{"version":3,"sources":["components/common/formsControls/formsControls.module.css","components/common/formsControls/formsControls.js","utils/validators/validators.js","hoc/authRedirect.jsx","components/Dialogs/dialogs.module.css","components/Dialogs/dialog/dialogItem.module.css","components/Dialogs/mesage/message.module.css","components/Dialogs/dialog/dialogItem.jsx","components/Dialogs/mesage/message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLength","length","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialog","Message","message","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsElement","dialogs","map","data","key","messagesElements","messages","datas","dialogs_items","messages_items","values","onSendMessageClick","newMessageBody","compose","dialogsPage","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/4.daf8b3db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2nbfC\",\"error\":\"formsControls_error__2j6e4\",\"formSummeryError\":\"formsControls_formSummeryError__29F9n\"};","import React from \"react\";\r\nimport s from './formsControls.module.css';\r\n// import {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","export const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2_iql\",\"dialogs_items\":\"dialogs_dialogs_items__T_gt3\",\"active\":\"dialogs_active__ZZ2PL\",\"messages_items\":\"dialogs_messages_items__1Iz9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogItem_dialog__3B46w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__3ueN0\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './dialogItem.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\nlet path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from './message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n  return (\r\n    <div className={s.message}>{props.message}</div>\r\n  );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./dialogs.module.css\";\r\nimport DialogItem from \"./dialog/dialogItem\";\r\nimport Message from \"./mesage/message\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from \"../common/formsControls/formsControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = props => {\r\n\r\n  let dialogsElement = props.state.dialogs.map(data => (\r\n    <DialogItem name={data.name} id={data.id} key={data.id} />\r\n  ));\r\n  let messagesElements = props.state.messages.map(datas => (\r\n    <Message message={datas.message} key={datas.id} />\r\n  ));\r\n\r\n  // let newMessageBody = props.state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.onSendMessageClick(values.newMessageBody);\r\n  };\r\n\r\n  if(!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>{dialogsElement}</div>\r\n      <div>\r\n        <div className={s.messages_items}>{messagesElements}</div>\r\n        \r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field \r\n        component={Textarea} \r\n        name='newMessageBody' \r\n        validate={[required, maxLength50, ]}\r\n        placeholder=\"send yor message\"\r\n      />\r\n    </div>\r\n    <div>\r\n      <button>add message</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux  = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import { sendMessageCreator } from \"../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { WithAuthRedirect } from \"../../hoc/authRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    state: state.dialogsPage,\r\n    isAuth: state.auth.isAuth\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSendMessageClick: (newMessageBody) => {\r\n     dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n"],"sourceRoot":""}